/* Generated 2015-09-28 15:15 by Casfire Khronos Specification Parser - admin@casfire.com */
#include "gl_core_3_3.hpp"

#ifdef _WIN32
	#define WIN32_LEAN_AND_MEAN 1
	#include <windows.h>
#else
	#include <dlfcn.h>
	#define HMODULE void*
	#define GetProcAddress dlsym
	#define FreeLibrary dlclose
#endif

namespace GL {
	
	void (*glActiveTexture)(GLenum texture) = nullptr;
	void (*glAttachShader)(GLuint program, GLuint shader) = nullptr;
	void (*glBeginConditionalRender)(GLuint id, GLenum mode) = nullptr;
	void (*glBeginQuery)(GLenum target, GLuint id) = nullptr;
	void (*glBeginTransformFeedback)(GLenum primitiveMode) = nullptr;
	void (*glBindAttribLocation)(GLuint program, GLuint index, const GLchar *name) = nullptr;
	void (*glBindBuffer)(GLenum target, GLuint buffer) = nullptr;
	void (*glBindBufferBase)(GLenum target, GLuint index, GLuint buffer) = nullptr;
	void (*glBindBufferRange)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size) = nullptr;
	void (*glBindFragDataLocation)(GLuint program, GLuint color, const GLchar *name) = nullptr;
	void (*glBindFragDataLocationIndexed)(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name) = nullptr;
	void (*glBindFramebuffer)(GLenum target, GLuint framebuffer) = nullptr;
	void (*glBindRenderbuffer)(GLenum target, GLuint renderbuffer) = nullptr;
	void (*glBindSampler)(GLuint unit, GLuint sampler) = nullptr;
	void (*glBindTexture)(GLenum target, GLuint texture) = nullptr;
	void (*glBindVertexArray)(GLuint array) = nullptr;
	void (*glBlendColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha) = nullptr;
	void (*glBlendEquation)(GLenum mode) = nullptr;
	void (*glBlendEquationSeparate)(GLenum modeRGB, GLenum modeAlpha) = nullptr;
	void (*glBlendFunc)(GLenum sfactor, GLenum dfactor) = nullptr;
	void (*glBlendFuncSeparate)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha) = nullptr;
	void (*glBlitFramebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) = nullptr;
	void (*glBufferData)(GLenum target, GLsizeiptr size, const void *data, GLenum usage) = nullptr;
	void (*glBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, const void *data) = nullptr;
	GLenum (*glCheckFramebufferStatus)(GLenum target) = nullptr;
	void (*glClampColor)(GLenum target, GLenum clamp) = nullptr;
	void (*glClear)(GLbitfield mask) = nullptr;
	void (*glClearBufferfi)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil) = nullptr;
	void (*glClearBufferfv)(GLenum buffer, GLint drawbuffer, const GLfloat *value) = nullptr;
	void (*glClearBufferiv)(GLenum buffer, GLint drawbuffer, const GLint *value) = nullptr;
	void (*glClearBufferuiv)(GLenum buffer, GLint drawbuffer, const GLuint *value) = nullptr;
	void (*glClearColor)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha) = nullptr;
	void (*glClearDepth)(GLdouble depth) = nullptr;
	void (*glClearStencil)(GLint s) = nullptr;
	GLenum (*glClientWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout) = nullptr;
	void (*glColorMask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha) = nullptr;
	void (*glColorMaski)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a) = nullptr;
	void (*glCompileShader)(GLuint shader) = nullptr;
	void (*glCompressedTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data) = nullptr;
	void (*glCompressedTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data) = nullptr;
	void (*glCompressedTexImage3D)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data) = nullptr;
	void (*glCompressedTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data) = nullptr;
	void (*glCompressedTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data) = nullptr;
	void (*glCompressedTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data) = nullptr;
	void (*glCopyBufferSubData)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size) = nullptr;
	void (*glCopyTexImage1D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border) = nullptr;
	void (*glCopyTexImage2D)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border) = nullptr;
	void (*glCopyTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width) = nullptr;
	void (*glCopyTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height) = nullptr;
	void (*glCopyTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height) = nullptr;
	GLuint (*glCreateProgram)() = nullptr;
	GLuint (*glCreateShader)(GLenum type) = nullptr;
	void (*glCullFace)(GLenum mode) = nullptr;
	void (*glDeleteBuffers)(GLsizei n, const GLuint *buffers) = nullptr;
	void (*glDeleteFramebuffers)(GLsizei n, const GLuint *framebuffers) = nullptr;
	void (*glDeleteProgram)(GLuint program) = nullptr;
	void (*glDeleteQueries)(GLsizei n, const GLuint *ids) = nullptr;
	void (*glDeleteRenderbuffers)(GLsizei n, const GLuint *renderbuffers) = nullptr;
	void (*glDeleteSamplers)(GLsizei count, const GLuint *samplers) = nullptr;
	void (*glDeleteShader)(GLuint shader) = nullptr;
	void (*glDeleteSync)(GLsync sync) = nullptr;
	void (*glDeleteTextures)(GLsizei n, const GLuint *textures) = nullptr;
	void (*glDeleteVertexArrays)(GLsizei n, const GLuint *arrays) = nullptr;
	void (*glDepthFunc)(GLenum func) = nullptr;
	void (*glDepthMask)(GLboolean flag) = nullptr;
	void (*glDepthRange)(GLdouble near, GLdouble far) = nullptr;
	void (*glDetachShader)(GLuint program, GLuint shader) = nullptr;
	void (*glDisable)(GLenum cap) = nullptr;
	void (*glDisableVertexAttribArray)(GLuint index) = nullptr;
	void (*glDisablei)(GLenum target, GLuint index) = nullptr;
	void (*glDrawArrays)(GLenum mode, GLint first, GLsizei count) = nullptr;
	void (*glDrawArraysInstanced)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount) = nullptr;
	void (*glDrawBuffer)(GLenum buf) = nullptr;
	void (*glDrawBuffers)(GLsizei n, const GLenum *bufs) = nullptr;
	void (*glDrawElements)(GLenum mode, GLsizei count, GLenum type, const void *indices) = nullptr;
	void (*glDrawElementsBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex) = nullptr;
	void (*glDrawElementsInstanced)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount) = nullptr;
	void (*glDrawElementsInstancedBaseVertex)(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex) = nullptr;
	void (*glDrawRangeElements)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices) = nullptr;
	void (*glDrawRangeElementsBaseVertex)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex) = nullptr;
	void (*glEnable)(GLenum cap) = nullptr;
	void (*glEnableVertexAttribArray)(GLuint index) = nullptr;
	void (*glEnablei)(GLenum target, GLuint index) = nullptr;
	void (*glEndConditionalRender)() = nullptr;
	void (*glEndQuery)(GLenum target) = nullptr;
	void (*glEndTransformFeedback)() = nullptr;
	GLsync (*glFenceSync)(GLenum condition, GLbitfield flags) = nullptr;
	void (*glFinish)() = nullptr;
	void (*glFlush)() = nullptr;
	void (*glFlushMappedBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length) = nullptr;
	void (*glFramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer) = nullptr;
	void (*glFramebufferTexture)(GLenum target, GLenum attachment, GLuint texture, GLint level) = nullptr;
	void (*glFramebufferTexture1D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) = nullptr;
	void (*glFramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) = nullptr;
	void (*glFramebufferTexture3D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset) = nullptr;
	void (*glFramebufferTextureLayer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer) = nullptr;
	void (*glFrontFace)(GLenum mode) = nullptr;
	void (*glGenBuffers)(GLsizei n, GLuint *buffers) = nullptr;
	void (*glGenFramebuffers)(GLsizei n, GLuint *framebuffers) = nullptr;
	void (*glGenQueries)(GLsizei n, GLuint *ids) = nullptr;
	void (*glGenRenderbuffers)(GLsizei n, GLuint *renderbuffers) = nullptr;
	void (*glGenSamplers)(GLsizei count, GLuint *samplers) = nullptr;
	void (*glGenTextures)(GLsizei n, GLuint *textures) = nullptr;
	void (*glGenVertexArrays)(GLsizei n, GLuint *arrays) = nullptr;
	void (*glGenerateMipmap)(GLenum target) = nullptr;
	void (*glGetActiveAttrib)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name) = nullptr;
	void (*glGetActiveUniform)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name) = nullptr;
	void (*glGetActiveUniformBlockName)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName) = nullptr;
	void (*glGetActiveUniformBlockiv)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params) = nullptr;
	void (*glGetActiveUniformName)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName) = nullptr;
	void (*glGetActiveUniformsiv)(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params) = nullptr;
	void (*glGetAttachedShaders)(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders) = nullptr;
	GLint (*glGetAttribLocation)(GLuint program, const GLchar *name) = nullptr;
	void (*glGetBooleani_v)(GLenum target, GLuint index, GLboolean *data) = nullptr;
	void (*glGetBooleanv)(GLenum pname, GLboolean *data) = nullptr;
	void (*glGetBufferParameteri64v)(GLenum target, GLenum pname, GLint64 *params) = nullptr;
	void (*glGetBufferParameteriv)(GLenum target, GLenum pname, GLint *params) = nullptr;
	void (*glGetBufferPointerv)(GLenum target, GLenum pname, void **params) = nullptr;
	void (*glGetBufferSubData)(GLenum target, GLintptr offset, GLsizeiptr size, void *data) = nullptr;
	void (*glGetCompressedTexImage)(GLenum target, GLint level, void *img) = nullptr;
	void (*glGetDoublev)(GLenum pname, GLdouble *data) = nullptr;
	GLenum (*glGetError)() = nullptr;
	void (*glGetFloatv)(GLenum pname, GLfloat *data) = nullptr;
	GLint (*glGetFragDataIndex)(GLuint program, const GLchar *name) = nullptr;
	GLint (*glGetFragDataLocation)(GLuint program, const GLchar *name) = nullptr;
	void (*glGetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint *params) = nullptr;
	void (*glGetInteger64i_v)(GLenum target, GLuint index, GLint64 *data) = nullptr;
	void (*glGetInteger64v)(GLenum pname, GLint64 *data) = nullptr;
	void (*glGetIntegeri_v)(GLenum target, GLuint index, GLint *data) = nullptr;
	void (*glGetIntegerv)(GLenum pname, GLint *data) = nullptr;
	void (*glGetMultisamplefv)(GLenum pname, GLuint index, GLfloat *val) = nullptr;
	void (*glGetProgramInfoLog)(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog) = nullptr;
	void (*glGetProgramiv)(GLuint program, GLenum pname, GLint *params) = nullptr;
	void (*glGetQueryObjecti64v)(GLuint id, GLenum pname, GLint64 *params) = nullptr;
	void (*glGetQueryObjectiv)(GLuint id, GLenum pname, GLint *params) = nullptr;
	void (*glGetQueryObjectui64v)(GLuint id, GLenum pname, GLuint64 *params) = nullptr;
	void (*glGetQueryObjectuiv)(GLuint id, GLenum pname, GLuint *params) = nullptr;
	void (*glGetQueryiv)(GLenum target, GLenum pname, GLint *params) = nullptr;
	void (*glGetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint *params) = nullptr;
	void (*glGetSamplerParameterIiv)(GLuint sampler, GLenum pname, GLint *params) = nullptr;
	void (*glGetSamplerParameterIuiv)(GLuint sampler, GLenum pname, GLuint *params) = nullptr;
	void (*glGetSamplerParameterfv)(GLuint sampler, GLenum pname, GLfloat *params) = nullptr;
	void (*glGetSamplerParameteriv)(GLuint sampler, GLenum pname, GLint *params) = nullptr;
	void (*glGetShaderInfoLog)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog) = nullptr;
	void (*glGetShaderSource)(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source) = nullptr;
	void (*glGetShaderiv)(GLuint shader, GLenum pname, GLint *params) = nullptr;
	const GLubyte *(*glGetString)(GLenum name) = nullptr;
	const GLubyte *(*glGetStringi)(GLenum name, GLuint index) = nullptr;
	void (*glGetSynciv)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values) = nullptr;
	void (*glGetTexImage)(GLenum target, GLint level, GLenum format, GLenum type, void *pixels) = nullptr;
	void (*glGetTexLevelParameterfv)(GLenum target, GLint level, GLenum pname, GLfloat *params) = nullptr;
	void (*glGetTexLevelParameteriv)(GLenum target, GLint level, GLenum pname, GLint *params) = nullptr;
	void (*glGetTexParameterIiv)(GLenum target, GLenum pname, GLint *params) = nullptr;
	void (*glGetTexParameterIuiv)(GLenum target, GLenum pname, GLuint *params) = nullptr;
	void (*glGetTexParameterfv)(GLenum target, GLenum pname, GLfloat *params) = nullptr;
	void (*glGetTexParameteriv)(GLenum target, GLenum pname, GLint *params) = nullptr;
	void (*glGetTransformFeedbackVarying)(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name) = nullptr;
	GLuint (*glGetUniformBlockIndex)(GLuint program, const GLchar *uniformBlockName) = nullptr;
	void (*glGetUniformIndices)(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices) = nullptr;
	GLint (*glGetUniformLocation)(GLuint program, const GLchar *name) = nullptr;
	void (*glGetUniformfv)(GLuint program, GLint location, GLfloat *params) = nullptr;
	void (*glGetUniformiv)(GLuint program, GLint location, GLint *params) = nullptr;
	void (*glGetUniformuiv)(GLuint program, GLint location, GLuint *params) = nullptr;
	void (*glGetVertexAttribIiv)(GLuint index, GLenum pname, GLint *params) = nullptr;
	void (*glGetVertexAttribIuiv)(GLuint index, GLenum pname, GLuint *params) = nullptr;
	void (*glGetVertexAttribPointerv)(GLuint index, GLenum pname, void **pointer) = nullptr;
	void (*glGetVertexAttribdv)(GLuint index, GLenum pname, GLdouble *params) = nullptr;
	void (*glGetVertexAttribfv)(GLuint index, GLenum pname, GLfloat *params) = nullptr;
	void (*glGetVertexAttribiv)(GLuint index, GLenum pname, GLint *params) = nullptr;
	void (*glHint)(GLenum target, GLenum mode) = nullptr;
	GLboolean (*glIsBuffer)(GLuint buffer) = nullptr;
	GLboolean (*glIsEnabled)(GLenum cap) = nullptr;
	GLboolean (*glIsEnabledi)(GLenum target, GLuint index) = nullptr;
	GLboolean (*glIsFramebuffer)(GLuint framebuffer) = nullptr;
	GLboolean (*glIsProgram)(GLuint program) = nullptr;
	GLboolean (*glIsQuery)(GLuint id) = nullptr;
	GLboolean (*glIsRenderbuffer)(GLuint renderbuffer) = nullptr;
	GLboolean (*glIsSampler)(GLuint sampler) = nullptr;
	GLboolean (*glIsShader)(GLuint shader) = nullptr;
	GLboolean (*glIsSync)(GLsync sync) = nullptr;
	GLboolean (*glIsTexture)(GLuint texture) = nullptr;
	GLboolean (*glIsVertexArray)(GLuint array) = nullptr;
	void (*glLineWidth)(GLfloat width) = nullptr;
	void (*glLinkProgram)(GLuint program) = nullptr;
	void (*glLogicOp)(GLenum opcode) = nullptr;
	void *(*glMapBuffer)(GLenum target, GLenum access) = nullptr;
	void *(*glMapBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access) = nullptr;
	void (*glMultiDrawArrays)(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount) = nullptr;
	void (*glMultiDrawElements)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount) = nullptr;
	void (*glMultiDrawElementsBaseVertex)(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex) = nullptr;
	void (*glPixelStoref)(GLenum pname, GLfloat param) = nullptr;
	void (*glPixelStorei)(GLenum pname, GLint param) = nullptr;
	void (*glPointParameterf)(GLenum pname, GLfloat param) = nullptr;
	void (*glPointParameterfv)(GLenum pname, const GLfloat *params) = nullptr;
	void (*glPointParameteri)(GLenum pname, GLint param) = nullptr;
	void (*glPointParameteriv)(GLenum pname, const GLint *params) = nullptr;
	void (*glPointSize)(GLfloat size) = nullptr;
	void (*glPolygonMode)(GLenum face, GLenum mode) = nullptr;
	void (*glPolygonOffset)(GLfloat factor, GLfloat units) = nullptr;
	void (*glPrimitiveRestartIndex)(GLuint index) = nullptr;
	void (*glProvokingVertex)(GLenum mode) = nullptr;
	void (*glQueryCounter)(GLuint id, GLenum target) = nullptr;
	void (*glReadBuffer)(GLenum src) = nullptr;
	void (*glReadPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels) = nullptr;
	void (*glRenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height) = nullptr;
	void (*glRenderbufferStorageMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) = nullptr;
	void (*glSampleCoverage)(GLfloat value, GLboolean invert) = nullptr;
	void (*glSampleMaski)(GLuint maskNumber, GLbitfield mask) = nullptr;
	void (*glSamplerParameterIiv)(GLuint sampler, GLenum pname, const GLint *param) = nullptr;
	void (*glSamplerParameterIuiv)(GLuint sampler, GLenum pname, const GLuint *param) = nullptr;
	void (*glSamplerParameterf)(GLuint sampler, GLenum pname, GLfloat param) = nullptr;
	void (*glSamplerParameterfv)(GLuint sampler, GLenum pname, const GLfloat *param) = nullptr;
	void (*glSamplerParameteri)(GLuint sampler, GLenum pname, GLint param) = nullptr;
	void (*glSamplerParameteriv)(GLuint sampler, GLenum pname, const GLint *param) = nullptr;
	void (*glScissor)(GLint x, GLint y, GLsizei width, GLsizei height) = nullptr;
	void (*glShaderSource)(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length) = nullptr;
	void (*glStencilFunc)(GLenum func, GLint ref, GLuint mask) = nullptr;
	void (*glStencilFuncSeparate)(GLenum face, GLenum func, GLint ref, GLuint mask) = nullptr;
	void (*glStencilMask)(GLuint mask) = nullptr;
	void (*glStencilMaskSeparate)(GLenum face, GLuint mask) = nullptr;
	void (*glStencilOp)(GLenum fail, GLenum zfail, GLenum zpass) = nullptr;
	void (*glStencilOpSeparate)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass) = nullptr;
	void (*glTexBuffer)(GLenum target, GLenum internalformat, GLuint buffer) = nullptr;
	void (*glTexImage1D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels) = nullptr;
	void (*glTexImage2D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels) = nullptr;
	void (*glTexImage2DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations) = nullptr;
	void (*glTexImage3D)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels) = nullptr;
	void (*glTexImage3DMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations) = nullptr;
	void (*glTexParameterIiv)(GLenum target, GLenum pname, const GLint *params) = nullptr;
	void (*glTexParameterIuiv)(GLenum target, GLenum pname, const GLuint *params) = nullptr;
	void (*glTexParameterf)(GLenum target, GLenum pname, GLfloat param) = nullptr;
	void (*glTexParameterfv)(GLenum target, GLenum pname, const GLfloat *params) = nullptr;
	void (*glTexParameteri)(GLenum target, GLenum pname, GLint param) = nullptr;
	void (*glTexParameteriv)(GLenum target, GLenum pname, const GLint *params) = nullptr;
	void (*glTexSubImage1D)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels) = nullptr;
	void (*glTexSubImage2D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels) = nullptr;
	void (*glTexSubImage3D)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels) = nullptr;
	void (*glTransformFeedbackVaryings)(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode) = nullptr;
	void (*glUniform1f)(GLint location, GLfloat v0) = nullptr;
	void (*glUniform1fv)(GLint location, GLsizei count, const GLfloat *value) = nullptr;
	void (*glUniform1i)(GLint location, GLint v0) = nullptr;
	void (*glUniform1iv)(GLint location, GLsizei count, const GLint *value) = nullptr;
	void (*glUniform1ui)(GLint location, GLuint v0) = nullptr;
	void (*glUniform1uiv)(GLint location, GLsizei count, const GLuint *value) = nullptr;
	void (*glUniform2f)(GLint location, GLfloat v0, GLfloat v1) = nullptr;
	void (*glUniform2fv)(GLint location, GLsizei count, const GLfloat *value) = nullptr;
	void (*glUniform2i)(GLint location, GLint v0, GLint v1) = nullptr;
	void (*glUniform2iv)(GLint location, GLsizei count, const GLint *value) = nullptr;
	void (*glUniform2ui)(GLint location, GLuint v0, GLuint v1) = nullptr;
	void (*glUniform2uiv)(GLint location, GLsizei count, const GLuint *value) = nullptr;
	void (*glUniform3f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2) = nullptr;
	void (*glUniform3fv)(GLint location, GLsizei count, const GLfloat *value) = nullptr;
	void (*glUniform3i)(GLint location, GLint v0, GLint v1, GLint v2) = nullptr;
	void (*glUniform3iv)(GLint location, GLsizei count, const GLint *value) = nullptr;
	void (*glUniform3ui)(GLint location, GLuint v0, GLuint v1, GLuint v2) = nullptr;
	void (*glUniform3uiv)(GLint location, GLsizei count, const GLuint *value) = nullptr;
	void (*glUniform4f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3) = nullptr;
	void (*glUniform4fv)(GLint location, GLsizei count, const GLfloat *value) = nullptr;
	void (*glUniform4i)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3) = nullptr;
	void (*glUniform4iv)(GLint location, GLsizei count, const GLint *value) = nullptr;
	void (*glUniform4ui)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3) = nullptr;
	void (*glUniform4uiv)(GLint location, GLsizei count, const GLuint *value) = nullptr;
	void (*glUniformBlockBinding)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding) = nullptr;
	void (*glUniformMatrix2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) = nullptr;
	void (*glUniformMatrix2x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) = nullptr;
	void (*glUniformMatrix2x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) = nullptr;
	void (*glUniformMatrix3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) = nullptr;
	void (*glUniformMatrix3x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) = nullptr;
	void (*glUniformMatrix3x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) = nullptr;
	void (*glUniformMatrix4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) = nullptr;
	void (*glUniformMatrix4x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) = nullptr;
	void (*glUniformMatrix4x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value) = nullptr;
	GLboolean (*glUnmapBuffer)(GLenum target) = nullptr;
	void (*glUseProgram)(GLuint program) = nullptr;
	void (*glValidateProgram)(GLuint program) = nullptr;
	void (*glVertexAttrib1d)(GLuint index, GLdouble x) = nullptr;
	void (*glVertexAttrib1dv)(GLuint index, const GLdouble *v) = nullptr;
	void (*glVertexAttrib1f)(GLuint index, GLfloat x) = nullptr;
	void (*glVertexAttrib1fv)(GLuint index, const GLfloat *v) = nullptr;
	void (*glVertexAttrib1s)(GLuint index, GLshort x) = nullptr;
	void (*glVertexAttrib1sv)(GLuint index, const GLshort *v) = nullptr;
	void (*glVertexAttrib2d)(GLuint index, GLdouble x, GLdouble y) = nullptr;
	void (*glVertexAttrib2dv)(GLuint index, const GLdouble *v) = nullptr;
	void (*glVertexAttrib2f)(GLuint index, GLfloat x, GLfloat y) = nullptr;
	void (*glVertexAttrib2fv)(GLuint index, const GLfloat *v) = nullptr;
	void (*glVertexAttrib2s)(GLuint index, GLshort x, GLshort y) = nullptr;
	void (*glVertexAttrib2sv)(GLuint index, const GLshort *v) = nullptr;
	void (*glVertexAttrib3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z) = nullptr;
	void (*glVertexAttrib3dv)(GLuint index, const GLdouble *v) = nullptr;
	void (*glVertexAttrib3f)(GLuint index, GLfloat x, GLfloat y, GLfloat z) = nullptr;
	void (*glVertexAttrib3fv)(GLuint index, const GLfloat *v) = nullptr;
	void (*glVertexAttrib3s)(GLuint index, GLshort x, GLshort y, GLshort z) = nullptr;
	void (*glVertexAttrib3sv)(GLuint index, const GLshort *v) = nullptr;
	void (*glVertexAttrib4Nbv)(GLuint index, const GLbyte *v) = nullptr;
	void (*glVertexAttrib4Niv)(GLuint index, const GLint *v) = nullptr;
	void (*glVertexAttrib4Nsv)(GLuint index, const GLshort *v) = nullptr;
	void (*glVertexAttrib4Nub)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w) = nullptr;
	void (*glVertexAttrib4Nubv)(GLuint index, const GLubyte *v) = nullptr;
	void (*glVertexAttrib4Nuiv)(GLuint index, const GLuint *v) = nullptr;
	void (*glVertexAttrib4Nusv)(GLuint index, const GLushort *v) = nullptr;
	void (*glVertexAttrib4bv)(GLuint index, const GLbyte *v) = nullptr;
	void (*glVertexAttrib4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w) = nullptr;
	void (*glVertexAttrib4dv)(GLuint index, const GLdouble *v) = nullptr;
	void (*glVertexAttrib4f)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w) = nullptr;
	void (*glVertexAttrib4fv)(GLuint index, const GLfloat *v) = nullptr;
	void (*glVertexAttrib4iv)(GLuint index, const GLint *v) = nullptr;
	void (*glVertexAttrib4s)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w) = nullptr;
	void (*glVertexAttrib4sv)(GLuint index, const GLshort *v) = nullptr;
	void (*glVertexAttrib4ubv)(GLuint index, const GLubyte *v) = nullptr;
	void (*glVertexAttrib4uiv)(GLuint index, const GLuint *v) = nullptr;
	void (*glVertexAttrib4usv)(GLuint index, const GLushort *v) = nullptr;
	void (*glVertexAttribDivisor)(GLuint index, GLuint divisor) = nullptr;
	void (*glVertexAttribI1i)(GLuint index, GLint x) = nullptr;
	void (*glVertexAttribI1iv)(GLuint index, const GLint *v) = nullptr;
	void (*glVertexAttribI1ui)(GLuint index, GLuint x) = nullptr;
	void (*glVertexAttribI1uiv)(GLuint index, const GLuint *v) = nullptr;
	void (*glVertexAttribI2i)(GLuint index, GLint x, GLint y) = nullptr;
	void (*glVertexAttribI2iv)(GLuint index, const GLint *v) = nullptr;
	void (*glVertexAttribI2ui)(GLuint index, GLuint x, GLuint y) = nullptr;
	void (*glVertexAttribI2uiv)(GLuint index, const GLuint *v) = nullptr;
	void (*glVertexAttribI3i)(GLuint index, GLint x, GLint y, GLint z) = nullptr;
	void (*glVertexAttribI3iv)(GLuint index, const GLint *v) = nullptr;
	void (*glVertexAttribI3ui)(GLuint index, GLuint x, GLuint y, GLuint z) = nullptr;
	void (*glVertexAttribI3uiv)(GLuint index, const GLuint *v) = nullptr;
	void (*glVertexAttribI4bv)(GLuint index, const GLbyte *v) = nullptr;
	void (*glVertexAttribI4i)(GLuint index, GLint x, GLint y, GLint z, GLint w) = nullptr;
	void (*glVertexAttribI4iv)(GLuint index, const GLint *v) = nullptr;
	void (*glVertexAttribI4sv)(GLuint index, const GLshort *v) = nullptr;
	void (*glVertexAttribI4ubv)(GLuint index, const GLubyte *v) = nullptr;
	void (*glVertexAttribI4ui)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w) = nullptr;
	void (*glVertexAttribI4uiv)(GLuint index, const GLuint *v) = nullptr;
	void (*glVertexAttribI4usv)(GLuint index, const GLushort *v) = nullptr;
	void (*glVertexAttribIPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer) = nullptr;
	void (*glVertexAttribP1ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value) = nullptr;
	void (*glVertexAttribP1uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value) = nullptr;
	void (*glVertexAttribP2ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value) = nullptr;
	void (*glVertexAttribP2uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value) = nullptr;
	void (*glVertexAttribP3ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value) = nullptr;
	void (*glVertexAttribP3uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value) = nullptr;
	void (*glVertexAttribP4ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value) = nullptr;
	void (*glVertexAttribP4uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint *value) = nullptr;
	void (*glVertexAttribPointer)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer) = nullptr;
	void (*glViewport)(GLint x, GLint y, GLsizei width, GLsizei height) = nullptr;
	void (*glWaitSync)(GLsync sync, GLbitfield flags, GLuint64 timeout) = nullptr;
	
	HMODULE slib = nullptr; GLFunctionLoader swgl = nullptr;
	void* sGetProcAddress(const char* name) {
		void* ret = swgl == nullptr ? nullptr : swgl(name);
		return ret == nullptr ? reinterpret_cast<void*>(GetProcAddress(slib, name)) : ret;
	}
	bool glLoadFunctions() {
		#if defined(_WIN32)
			slib = LoadLibraryA("opengl32.dll"); if (slib == nullptr) return false;
			swgl = reinterpret_cast<GLFunctionLoader>(GetProcAddress(slib, "wglGetProcAddress"));
		#elif defined(__APPLE__)
			slib = dlopen("../Frameworks/OpenGL.framework/OpenGL", RTLD_NOW | RTLD_GLOBAL);
			if (slib == nullptr) slib = dlopen("/Library/Frameworks/OpenGL.framework/OpenGL", RTLD_NOW | RTLD_GLOBAL);
			if (slib == nullptr) slib = dlopen("/System/Library/Frameworks/OpenGL.framework/OpenGL", RTLD_NOW | RTLD_GLOBAL);
			if (slib == nullptr) slib = dlopen("/System/Library/Frameworks/OpenGL.framework/Versions/Current/OpenGL", RTLD_NOW | RTLD_GLOBAL);
			if (slib == nullptr) return false;
		#else
			slib = dlopen("libGL.so.1", RTLD_NOW | RTLD_GLOBAL);
			if (slib == nullptr) slib = dlopen("libGL.so", RTLD_NOW | RTLD_GLOBAL);
			if (slib == nullptr) return false;
			swgl = reinterpret_cast<GLFunctionLoader>(dlsym(slib, "glXGetProcAddressARB"));
		#endif
		bool status = glLoadFunctions(&sGetProcAddress);
		FreeLibrary(slib); slib = nullptr; swgl = nullptr;
		return status;
	}
	template <typename Fn>
	inline int Load(Fn &f, const GLFunctionLoader &load, const char* name) {
		return (f = reinterpret_cast<Fn>(load(name))) ? 0 : 1;
	};
	
	bool glLoadFunctions(const GLFunctionLoader &load) {
		int failed = 0;
		failed += Load(glActiveTexture, load, "glActiveTexture");
		failed += Load(glAttachShader, load, "glAttachShader");
		failed += Load(glBeginConditionalRender, load, "glBeginConditionalRender");
		failed += Load(glBeginQuery, load, "glBeginQuery");
		failed += Load(glBeginTransformFeedback, load, "glBeginTransformFeedback");
		failed += Load(glBindAttribLocation, load, "glBindAttribLocation");
		failed += Load(glBindBuffer, load, "glBindBuffer");
		failed += Load(glBindBufferBase, load, "glBindBufferBase");
		failed += Load(glBindBufferRange, load, "glBindBufferRange");
		failed += Load(glBindFragDataLocation, load, "glBindFragDataLocation");
		failed += Load(glBindFragDataLocationIndexed, load, "glBindFragDataLocationIndexed");
		failed += Load(glBindFramebuffer, load, "glBindFramebuffer");
		failed += Load(glBindRenderbuffer, load, "glBindRenderbuffer");
		failed += Load(glBindSampler, load, "glBindSampler");
		failed += Load(glBindTexture, load, "glBindTexture");
		failed += Load(glBindVertexArray, load, "glBindVertexArray");
		failed += Load(glBlendColor, load, "glBlendColor");
		failed += Load(glBlendEquation, load, "glBlendEquation");
		failed += Load(glBlendEquationSeparate, load, "glBlendEquationSeparate");
		failed += Load(glBlendFunc, load, "glBlendFunc");
		failed += Load(glBlendFuncSeparate, load, "glBlendFuncSeparate");
		failed += Load(glBlitFramebuffer, load, "glBlitFramebuffer");
		failed += Load(glBufferData, load, "glBufferData");
		failed += Load(glBufferSubData, load, "glBufferSubData");
		failed += Load(glCheckFramebufferStatus, load, "glCheckFramebufferStatus");
		failed += Load(glClampColor, load, "glClampColor");
		failed += Load(glClear, load, "glClear");
		failed += Load(glClearBufferfi, load, "glClearBufferfi");
		failed += Load(glClearBufferfv, load, "glClearBufferfv");
		failed += Load(glClearBufferiv, load, "glClearBufferiv");
		failed += Load(glClearBufferuiv, load, "glClearBufferuiv");
		failed += Load(glClearColor, load, "glClearColor");
		failed += Load(glClearDepth, load, "glClearDepth");
		failed += Load(glClearStencil, load, "glClearStencil");
		failed += Load(glClientWaitSync, load, "glClientWaitSync");
		failed += Load(glColorMask, load, "glColorMask");
		failed += Load(glColorMaski, load, "glColorMaski");
		failed += Load(glCompileShader, load, "glCompileShader");
		failed += Load(glCompressedTexImage1D, load, "glCompressedTexImage1D");
		failed += Load(glCompressedTexImage2D, load, "glCompressedTexImage2D");
		failed += Load(glCompressedTexImage3D, load, "glCompressedTexImage3D");
		failed += Load(glCompressedTexSubImage1D, load, "glCompressedTexSubImage1D");
		failed += Load(glCompressedTexSubImage2D, load, "glCompressedTexSubImage2D");
		failed += Load(glCompressedTexSubImage3D, load, "glCompressedTexSubImage3D");
		failed += Load(glCopyBufferSubData, load, "glCopyBufferSubData");
		failed += Load(glCopyTexImage1D, load, "glCopyTexImage1D");
		failed += Load(glCopyTexImage2D, load, "glCopyTexImage2D");
		failed += Load(glCopyTexSubImage1D, load, "glCopyTexSubImage1D");
		failed += Load(glCopyTexSubImage2D, load, "glCopyTexSubImage2D");
		failed += Load(glCopyTexSubImage3D, load, "glCopyTexSubImage3D");
		failed += Load(glCreateProgram, load, "glCreateProgram");
		failed += Load(glCreateShader, load, "glCreateShader");
		failed += Load(glCullFace, load, "glCullFace");
		failed += Load(glDeleteBuffers, load, "glDeleteBuffers");
		failed += Load(glDeleteFramebuffers, load, "glDeleteFramebuffers");
		failed += Load(glDeleteProgram, load, "glDeleteProgram");
		failed += Load(glDeleteQueries, load, "glDeleteQueries");
		failed += Load(glDeleteRenderbuffers, load, "glDeleteRenderbuffers");
		failed += Load(glDeleteSamplers, load, "glDeleteSamplers");
		failed += Load(glDeleteShader, load, "glDeleteShader");
		failed += Load(glDeleteSync, load, "glDeleteSync");
		failed += Load(glDeleteTextures, load, "glDeleteTextures");
		failed += Load(glDeleteVertexArrays, load, "glDeleteVertexArrays");
		failed += Load(glDepthFunc, load, "glDepthFunc");
		failed += Load(glDepthMask, load, "glDepthMask");
		failed += Load(glDepthRange, load, "glDepthRange");
		failed += Load(glDetachShader, load, "glDetachShader");
		failed += Load(glDisable, load, "glDisable");
		failed += Load(glDisableVertexAttribArray, load, "glDisableVertexAttribArray");
		failed += Load(glDisablei, load, "glDisablei");
		failed += Load(glDrawArrays, load, "glDrawArrays");
		failed += Load(glDrawArraysInstanced, load, "glDrawArraysInstanced");
		failed += Load(glDrawBuffer, load, "glDrawBuffer");
		failed += Load(glDrawBuffers, load, "glDrawBuffers");
		failed += Load(glDrawElements, load, "glDrawElements");
		failed += Load(glDrawElementsBaseVertex, load, "glDrawElementsBaseVertex");
		failed += Load(glDrawElementsInstanced, load, "glDrawElementsInstanced");
		failed += Load(glDrawElementsInstancedBaseVertex, load, "glDrawElementsInstancedBaseVertex");
		failed += Load(glDrawRangeElements, load, "glDrawRangeElements");
		failed += Load(glDrawRangeElementsBaseVertex, load, "glDrawRangeElementsBaseVertex");
		failed += Load(glEnable, load, "glEnable");
		failed += Load(glEnableVertexAttribArray, load, "glEnableVertexAttribArray");
		failed += Load(glEnablei, load, "glEnablei");
		failed += Load(glEndConditionalRender, load, "glEndConditionalRender");
		failed += Load(glEndQuery, load, "glEndQuery");
		failed += Load(glEndTransformFeedback, load, "glEndTransformFeedback");
		failed += Load(glFenceSync, load, "glFenceSync");
		failed += Load(glFinish, load, "glFinish");
		failed += Load(glFlush, load, "glFlush");
		failed += Load(glFlushMappedBufferRange, load, "glFlushMappedBufferRange");
		failed += Load(glFramebufferRenderbuffer, load, "glFramebufferRenderbuffer");
		failed += Load(glFramebufferTexture, load, "glFramebufferTexture");
		failed += Load(glFramebufferTexture1D, load, "glFramebufferTexture1D");
		failed += Load(glFramebufferTexture2D, load, "glFramebufferTexture2D");
		failed += Load(glFramebufferTexture3D, load, "glFramebufferTexture3D");
		failed += Load(glFramebufferTextureLayer, load, "glFramebufferTextureLayer");
		failed += Load(glFrontFace, load, "glFrontFace");
		failed += Load(glGenBuffers, load, "glGenBuffers");
		failed += Load(glGenFramebuffers, load, "glGenFramebuffers");
		failed += Load(glGenQueries, load, "glGenQueries");
		failed += Load(glGenRenderbuffers, load, "glGenRenderbuffers");
		failed += Load(glGenSamplers, load, "glGenSamplers");
		failed += Load(glGenTextures, load, "glGenTextures");
		failed += Load(glGenVertexArrays, load, "glGenVertexArrays");
		failed += Load(glGenerateMipmap, load, "glGenerateMipmap");
		failed += Load(glGetActiveAttrib, load, "glGetActiveAttrib");
		failed += Load(glGetActiveUniform, load, "glGetActiveUniform");
		failed += Load(glGetActiveUniformBlockName, load, "glGetActiveUniformBlockName");
		failed += Load(glGetActiveUniformBlockiv, load, "glGetActiveUniformBlockiv");
		failed += Load(glGetActiveUniformName, load, "glGetActiveUniformName");
		failed += Load(glGetActiveUniformsiv, load, "glGetActiveUniformsiv");
		failed += Load(glGetAttachedShaders, load, "glGetAttachedShaders");
		failed += Load(glGetAttribLocation, load, "glGetAttribLocation");
		failed += Load(glGetBooleani_v, load, "glGetBooleani_v");
		failed += Load(glGetBooleanv, load, "glGetBooleanv");
		failed += Load(glGetBufferParameteri64v, load, "glGetBufferParameteri64v");
		failed += Load(glGetBufferParameteriv, load, "glGetBufferParameteriv");
		failed += Load(glGetBufferPointerv, load, "glGetBufferPointerv");
		failed += Load(glGetBufferSubData, load, "glGetBufferSubData");
		failed += Load(glGetCompressedTexImage, load, "glGetCompressedTexImage");
		failed += Load(glGetDoublev, load, "glGetDoublev");
		failed += Load(glGetError, load, "glGetError");
		failed += Load(glGetFloatv, load, "glGetFloatv");
		failed += Load(glGetFragDataIndex, load, "glGetFragDataIndex");
		failed += Load(glGetFragDataLocation, load, "glGetFragDataLocation");
		failed += Load(glGetFramebufferAttachmentParameteriv, load, "glGetFramebufferAttachmentParameteriv");
		failed += Load(glGetInteger64i_v, load, "glGetInteger64i_v");
		failed += Load(glGetInteger64v, load, "glGetInteger64v");
		failed += Load(glGetIntegeri_v, load, "glGetIntegeri_v");
		failed += Load(glGetIntegerv, load, "glGetIntegerv");
		failed += Load(glGetMultisamplefv, load, "glGetMultisamplefv");
		failed += Load(glGetProgramInfoLog, load, "glGetProgramInfoLog");
		failed += Load(glGetProgramiv, load, "glGetProgramiv");
		failed += Load(glGetQueryObjecti64v, load, "glGetQueryObjecti64v");
		failed += Load(glGetQueryObjectiv, load, "glGetQueryObjectiv");
		failed += Load(glGetQueryObjectui64v, load, "glGetQueryObjectui64v");
		failed += Load(glGetQueryObjectuiv, load, "glGetQueryObjectuiv");
		failed += Load(glGetQueryiv, load, "glGetQueryiv");
		failed += Load(glGetRenderbufferParameteriv, load, "glGetRenderbufferParameteriv");
		failed += Load(glGetSamplerParameterIiv, load, "glGetSamplerParameterIiv");
		failed += Load(glGetSamplerParameterIuiv, load, "glGetSamplerParameterIuiv");
		failed += Load(glGetSamplerParameterfv, load, "glGetSamplerParameterfv");
		failed += Load(glGetSamplerParameteriv, load, "glGetSamplerParameteriv");
		failed += Load(glGetShaderInfoLog, load, "glGetShaderInfoLog");
		failed += Load(glGetShaderSource, load, "glGetShaderSource");
		failed += Load(glGetShaderiv, load, "glGetShaderiv");
		failed += Load(glGetString, load, "glGetString");
		failed += Load(glGetStringi, load, "glGetStringi");
		failed += Load(glGetSynciv, load, "glGetSynciv");
		failed += Load(glGetTexImage, load, "glGetTexImage");
		failed += Load(glGetTexLevelParameterfv, load, "glGetTexLevelParameterfv");
		failed += Load(glGetTexLevelParameteriv, load, "glGetTexLevelParameteriv");
		failed += Load(glGetTexParameterIiv, load, "glGetTexParameterIiv");
		failed += Load(glGetTexParameterIuiv, load, "glGetTexParameterIuiv");
		failed += Load(glGetTexParameterfv, load, "glGetTexParameterfv");
		failed += Load(glGetTexParameteriv, load, "glGetTexParameteriv");
		failed += Load(glGetTransformFeedbackVarying, load, "glGetTransformFeedbackVarying");
		failed += Load(glGetUniformBlockIndex, load, "glGetUniformBlockIndex");
		failed += Load(glGetUniformIndices, load, "glGetUniformIndices");
		failed += Load(glGetUniformLocation, load, "glGetUniformLocation");
		failed += Load(glGetUniformfv, load, "glGetUniformfv");
		failed += Load(glGetUniformiv, load, "glGetUniformiv");
		failed += Load(glGetUniformuiv, load, "glGetUniformuiv");
		failed += Load(glGetVertexAttribIiv, load, "glGetVertexAttribIiv");
		failed += Load(glGetVertexAttribIuiv, load, "glGetVertexAttribIuiv");
		failed += Load(glGetVertexAttribPointerv, load, "glGetVertexAttribPointerv");
		failed += Load(glGetVertexAttribdv, load, "glGetVertexAttribdv");
		failed += Load(glGetVertexAttribfv, load, "glGetVertexAttribfv");
		failed += Load(glGetVertexAttribiv, load, "glGetVertexAttribiv");
		failed += Load(glHint, load, "glHint");
		failed += Load(glIsBuffer, load, "glIsBuffer");
		failed += Load(glIsEnabled, load, "glIsEnabled");
		failed += Load(glIsEnabledi, load, "glIsEnabledi");
		failed += Load(glIsFramebuffer, load, "glIsFramebuffer");
		failed += Load(glIsProgram, load, "glIsProgram");
		failed += Load(glIsQuery, load, "glIsQuery");
		failed += Load(glIsRenderbuffer, load, "glIsRenderbuffer");
		failed += Load(glIsSampler, load, "glIsSampler");
		failed += Load(glIsShader, load, "glIsShader");
		failed += Load(glIsSync, load, "glIsSync");
		failed += Load(glIsTexture, load, "glIsTexture");
		failed += Load(glIsVertexArray, load, "glIsVertexArray");
		failed += Load(glLineWidth, load, "glLineWidth");
		failed += Load(glLinkProgram, load, "glLinkProgram");
		failed += Load(glLogicOp, load, "glLogicOp");
		failed += Load(glMapBuffer, load, "glMapBuffer");
		failed += Load(glMapBufferRange, load, "glMapBufferRange");
		failed += Load(glMultiDrawArrays, load, "glMultiDrawArrays");
		failed += Load(glMultiDrawElements, load, "glMultiDrawElements");
		failed += Load(glMultiDrawElementsBaseVertex, load, "glMultiDrawElementsBaseVertex");
		failed += Load(glPixelStoref, load, "glPixelStoref");
		failed += Load(glPixelStorei, load, "glPixelStorei");
		failed += Load(glPointParameterf, load, "glPointParameterf");
		failed += Load(glPointParameterfv, load, "glPointParameterfv");
		failed += Load(glPointParameteri, load, "glPointParameteri");
		failed += Load(glPointParameteriv, load, "glPointParameteriv");
		failed += Load(glPointSize, load, "glPointSize");
		failed += Load(glPolygonMode, load, "glPolygonMode");
		failed += Load(glPolygonOffset, load, "glPolygonOffset");
		failed += Load(glPrimitiveRestartIndex, load, "glPrimitiveRestartIndex");
		failed += Load(glProvokingVertex, load, "glProvokingVertex");
		failed += Load(glQueryCounter, load, "glQueryCounter");
		failed += Load(glReadBuffer, load, "glReadBuffer");
		failed += Load(glReadPixels, load, "glReadPixels");
		failed += Load(glRenderbufferStorage, load, "glRenderbufferStorage");
		failed += Load(glRenderbufferStorageMultisample, load, "glRenderbufferStorageMultisample");
		failed += Load(glSampleCoverage, load, "glSampleCoverage");
		failed += Load(glSampleMaski, load, "glSampleMaski");
		failed += Load(glSamplerParameterIiv, load, "glSamplerParameterIiv");
		failed += Load(glSamplerParameterIuiv, load, "glSamplerParameterIuiv");
		failed += Load(glSamplerParameterf, load, "glSamplerParameterf");
		failed += Load(glSamplerParameterfv, load, "glSamplerParameterfv");
		failed += Load(glSamplerParameteri, load, "glSamplerParameteri");
		failed += Load(glSamplerParameteriv, load, "glSamplerParameteriv");
		failed += Load(glScissor, load, "glScissor");
		failed += Load(glShaderSource, load, "glShaderSource");
		failed += Load(glStencilFunc, load, "glStencilFunc");
		failed += Load(glStencilFuncSeparate, load, "glStencilFuncSeparate");
		failed += Load(glStencilMask, load, "glStencilMask");
		failed += Load(glStencilMaskSeparate, load, "glStencilMaskSeparate");
		failed += Load(glStencilOp, load, "glStencilOp");
		failed += Load(glStencilOpSeparate, load, "glStencilOpSeparate");
		failed += Load(glTexBuffer, load, "glTexBuffer");
		failed += Load(glTexImage1D, load, "glTexImage1D");
		failed += Load(glTexImage2D, load, "glTexImage2D");
		failed += Load(glTexImage2DMultisample, load, "glTexImage2DMultisample");
		failed += Load(glTexImage3D, load, "glTexImage3D");
		failed += Load(glTexImage3DMultisample, load, "glTexImage3DMultisample");
		failed += Load(glTexParameterIiv, load, "glTexParameterIiv");
		failed += Load(glTexParameterIuiv, load, "glTexParameterIuiv");
		failed += Load(glTexParameterf, load, "glTexParameterf");
		failed += Load(glTexParameterfv, load, "glTexParameterfv");
		failed += Load(glTexParameteri, load, "glTexParameteri");
		failed += Load(glTexParameteriv, load, "glTexParameteriv");
		failed += Load(glTexSubImage1D, load, "glTexSubImage1D");
		failed += Load(glTexSubImage2D, load, "glTexSubImage2D");
		failed += Load(glTexSubImage3D, load, "glTexSubImage3D");
		failed += Load(glTransformFeedbackVaryings, load, "glTransformFeedbackVaryings");
		failed += Load(glUniform1f, load, "glUniform1f");
		failed += Load(glUniform1fv, load, "glUniform1fv");
		failed += Load(glUniform1i, load, "glUniform1i");
		failed += Load(glUniform1iv, load, "glUniform1iv");
		failed += Load(glUniform1ui, load, "glUniform1ui");
		failed += Load(glUniform1uiv, load, "glUniform1uiv");
		failed += Load(glUniform2f, load, "glUniform2f");
		failed += Load(glUniform2fv, load, "glUniform2fv");
		failed += Load(glUniform2i, load, "glUniform2i");
		failed += Load(glUniform2iv, load, "glUniform2iv");
		failed += Load(glUniform2ui, load, "glUniform2ui");
		failed += Load(glUniform2uiv, load, "glUniform2uiv");
		failed += Load(glUniform3f, load, "glUniform3f");
		failed += Load(glUniform3fv, load, "glUniform3fv");
		failed += Load(glUniform3i, load, "glUniform3i");
		failed += Load(glUniform3iv, load, "glUniform3iv");
		failed += Load(glUniform3ui, load, "glUniform3ui");
		failed += Load(glUniform3uiv, load, "glUniform3uiv");
		failed += Load(glUniform4f, load, "glUniform4f");
		failed += Load(glUniform4fv, load, "glUniform4fv");
		failed += Load(glUniform4i, load, "glUniform4i");
		failed += Load(glUniform4iv, load, "glUniform4iv");
		failed += Load(glUniform4ui, load, "glUniform4ui");
		failed += Load(glUniform4uiv, load, "glUniform4uiv");
		failed += Load(glUniformBlockBinding, load, "glUniformBlockBinding");
		failed += Load(glUniformMatrix2fv, load, "glUniformMatrix2fv");
		failed += Load(glUniformMatrix2x3fv, load, "glUniformMatrix2x3fv");
		failed += Load(glUniformMatrix2x4fv, load, "glUniformMatrix2x4fv");
		failed += Load(glUniformMatrix3fv, load, "glUniformMatrix3fv");
		failed += Load(glUniformMatrix3x2fv, load, "glUniformMatrix3x2fv");
		failed += Load(glUniformMatrix3x4fv, load, "glUniformMatrix3x4fv");
		failed += Load(glUniformMatrix4fv, load, "glUniformMatrix4fv");
		failed += Load(glUniformMatrix4x2fv, load, "glUniformMatrix4x2fv");
		failed += Load(glUniformMatrix4x3fv, load, "glUniformMatrix4x3fv");
		failed += Load(glUnmapBuffer, load, "glUnmapBuffer");
		failed += Load(glUseProgram, load, "glUseProgram");
		failed += Load(glValidateProgram, load, "glValidateProgram");
		failed += Load(glVertexAttrib1d, load, "glVertexAttrib1d");
		failed += Load(glVertexAttrib1dv, load, "glVertexAttrib1dv");
		failed += Load(glVertexAttrib1f, load, "glVertexAttrib1f");
		failed += Load(glVertexAttrib1fv, load, "glVertexAttrib1fv");
		failed += Load(glVertexAttrib1s, load, "glVertexAttrib1s");
		failed += Load(glVertexAttrib1sv, load, "glVertexAttrib1sv");
		failed += Load(glVertexAttrib2d, load, "glVertexAttrib2d");
		failed += Load(glVertexAttrib2dv, load, "glVertexAttrib2dv");
		failed += Load(glVertexAttrib2f, load, "glVertexAttrib2f");
		failed += Load(glVertexAttrib2fv, load, "glVertexAttrib2fv");
		failed += Load(glVertexAttrib2s, load, "glVertexAttrib2s");
		failed += Load(glVertexAttrib2sv, load, "glVertexAttrib2sv");
		failed += Load(glVertexAttrib3d, load, "glVertexAttrib3d");
		failed += Load(glVertexAttrib3dv, load, "glVertexAttrib3dv");
		failed += Load(glVertexAttrib3f, load, "glVertexAttrib3f");
		failed += Load(glVertexAttrib3fv, load, "glVertexAttrib3fv");
		failed += Load(glVertexAttrib3s, load, "glVertexAttrib3s");
		failed += Load(glVertexAttrib3sv, load, "glVertexAttrib3sv");
		failed += Load(glVertexAttrib4Nbv, load, "glVertexAttrib4Nbv");
		failed += Load(glVertexAttrib4Niv, load, "glVertexAttrib4Niv");
		failed += Load(glVertexAttrib4Nsv, load, "glVertexAttrib4Nsv");
		failed += Load(glVertexAttrib4Nub, load, "glVertexAttrib4Nub");
		failed += Load(glVertexAttrib4Nubv, load, "glVertexAttrib4Nubv");
		failed += Load(glVertexAttrib4Nuiv, load, "glVertexAttrib4Nuiv");
		failed += Load(glVertexAttrib4Nusv, load, "glVertexAttrib4Nusv");
		failed += Load(glVertexAttrib4bv, load, "glVertexAttrib4bv");
		failed += Load(glVertexAttrib4d, load, "glVertexAttrib4d");
		failed += Load(glVertexAttrib4dv, load, "glVertexAttrib4dv");
		failed += Load(glVertexAttrib4f, load, "glVertexAttrib4f");
		failed += Load(glVertexAttrib4fv, load, "glVertexAttrib4fv");
		failed += Load(glVertexAttrib4iv, load, "glVertexAttrib4iv");
		failed += Load(glVertexAttrib4s, load, "glVertexAttrib4s");
		failed += Load(glVertexAttrib4sv, load, "glVertexAttrib4sv");
		failed += Load(glVertexAttrib4ubv, load, "glVertexAttrib4ubv");
		failed += Load(glVertexAttrib4uiv, load, "glVertexAttrib4uiv");
		failed += Load(glVertexAttrib4usv, load, "glVertexAttrib4usv");
		failed += Load(glVertexAttribDivisor, load, "glVertexAttribDivisor");
		failed += Load(glVertexAttribI1i, load, "glVertexAttribI1i");
		failed += Load(glVertexAttribI1iv, load, "glVertexAttribI1iv");
		failed += Load(glVertexAttribI1ui, load, "glVertexAttribI1ui");
		failed += Load(glVertexAttribI1uiv, load, "glVertexAttribI1uiv");
		failed += Load(glVertexAttribI2i, load, "glVertexAttribI2i");
		failed += Load(glVertexAttribI2iv, load, "glVertexAttribI2iv");
		failed += Load(glVertexAttribI2ui, load, "glVertexAttribI2ui");
		failed += Load(glVertexAttribI2uiv, load, "glVertexAttribI2uiv");
		failed += Load(glVertexAttribI3i, load, "glVertexAttribI3i");
		failed += Load(glVertexAttribI3iv, load, "glVertexAttribI3iv");
		failed += Load(glVertexAttribI3ui, load, "glVertexAttribI3ui");
		failed += Load(glVertexAttribI3uiv, load, "glVertexAttribI3uiv");
		failed += Load(glVertexAttribI4bv, load, "glVertexAttribI4bv");
		failed += Load(glVertexAttribI4i, load, "glVertexAttribI4i");
		failed += Load(glVertexAttribI4iv, load, "glVertexAttribI4iv");
		failed += Load(glVertexAttribI4sv, load, "glVertexAttribI4sv");
		failed += Load(glVertexAttribI4ubv, load, "glVertexAttribI4ubv");
		failed += Load(glVertexAttribI4ui, load, "glVertexAttribI4ui");
		failed += Load(glVertexAttribI4uiv, load, "glVertexAttribI4uiv");
		failed += Load(glVertexAttribI4usv, load, "glVertexAttribI4usv");
		failed += Load(glVertexAttribIPointer, load, "glVertexAttribIPointer");
		failed += Load(glVertexAttribP1ui, load, "glVertexAttribP1ui");
		failed += Load(glVertexAttribP1uiv, load, "glVertexAttribP1uiv");
		failed += Load(glVertexAttribP2ui, load, "glVertexAttribP2ui");
		failed += Load(glVertexAttribP2uiv, load, "glVertexAttribP2uiv");
		failed += Load(glVertexAttribP3ui, load, "glVertexAttribP3ui");
		failed += Load(glVertexAttribP3uiv, load, "glVertexAttribP3uiv");
		failed += Load(glVertexAttribP4ui, load, "glVertexAttribP4ui");
		failed += Load(glVertexAttribP4uiv, load, "glVertexAttribP4uiv");
		failed += Load(glVertexAttribPointer, load, "glVertexAttribPointer");
		failed += Load(glViewport, load, "glViewport");
		failed += Load(glWaitSync, load, "glWaitSync");
		return failed == 0;
	}
	
} //GL
